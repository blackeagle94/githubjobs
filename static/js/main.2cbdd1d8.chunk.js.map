{"version":3,"sources":["Job.js","JobPagination.js","SearchForm.js","useFetchJobs.js","App.js","reportWebVitals.js","index.js"],"names":["Job","job","useState","open","setOpen","Card","className","Body","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","type","location","style","wordBreak","source","how_to_apply","height","src","company_logo","alt","Text","Button","onClick","prev","Collapse","in","description","JobPagination","page","setPage","hasNextPage","adjustPage","amount","prevPage","Pagination","Prev","Item","Ellipsis","active","Next","SearchForm","params","onParamChange","Form","Row","Group","as","Col","Label","Control","onChange","value","name","xs","Check","full_time","id","label","BASE_URL","ACTIONS","reducer","state","action","loading","jobs","payload","error","useFetchJobs","useReducer","dispatch","useEffect","cancelToken1","axios","CancelToken","get","cancelToken","token","markdown","then","res","data","catch","err","isCancel","cancelToken2","length","cancel","App","setParams","Container","e","param","target","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cbdd1d8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Badge, Button, Card, Collapse } from 'react-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nconst Job = ({job}) => {\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    return (\r\n        <Card className=\"mb-3\">\r\n        <Card.Body>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div>\r\n                    <Card.Title>\r\n                    {job.title} - <span className=\"text-muted font-weight-light\">{job.company}</span>\r\n                    </Card.Title>\r\n                    <Card.Subtitle className=\"text-muted mb-2\">\r\n                        {new Date(job.created_at).toLocaleDateString()}\r\n                    </Card.Subtitle>\r\n                    <Badge variant=\"secondary\" className=\"mr-2\">{job.type}</Badge>\r\n                    <Badge variant=\"secondary\">{job.location}</Badge>\r\n                    <div style={{wordBreak: 'break-all'}}>\r\n                        <ReactMarkdown source={job.how_to_apply}/>\r\n                    </div>\r\n                </div>\r\n                <img className=\"d-none d-md-block\" height='50' src={job.company_logo} alt={job.company}/>\r\n            </div>\r\n            <Card.Text>\r\n                <Button onClick={() => setOpen(prev => !prev)} variant=\"primary\">{!open ? 'View Details' : 'Hide Details'}</Button>\r\n            </Card.Text>\r\n            <Collapse in={open}>\r\n            <div className=\"mt-4\">\r\n                <ReactMarkdown source={job.description}/>\r\n            </div>\r\n            </Collapse>\r\n        </Card.Body>\r\n        </Card>     \r\n    )\r\n}\r\n\r\nexport default Job\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nconst JobPagination = ({ page, setPage, hasNextPage }) => {\r\n\tfunction adjustPage(amount) {\r\n\t\tsetPage((prevPage) => prevPage + amount);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Pagination>\r\n\t\t\t{page !== 1 && <Pagination.Prev onClick={() => adjustPage(-1)} />}\r\n\t\t\t{page !== 1 && <Pagination.Item onClick={() => adjustPage(1)}>1</Pagination.Item>}\r\n\t\t\t{page > 2 && <Pagination.Ellipsis />}\r\n\t\t\t{page > 2 && <Pagination.Item onClick={() => adjustPage(-1)}>{page - 1}</Pagination.Item>}\r\n\t\t\t<Pagination.Item active>{page}</Pagination.Item>\r\n\t\t\t{hasNextPage && <Pagination.Item onClick={() => adjustPage(1)}>{page + 1}</Pagination.Item>}\r\n\t\t\t{hasNextPage && <Pagination.Next onClick={() => adjustPage(1)} />}\r\n\t\t</Pagination>\r\n\t);\r\n};\r\n\r\nexport default JobPagination;\r\n","import React from 'react'\r\nimport { Form, Col } from 'react-bootstrap'\r\n\r\nconst SearchForm = ({params, onParamChange}) => {\r\n    return (\r\n        <Form className=\"mb-4\">\r\n            <Form.Row className=\"align-items-end\">\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Description</Form.Label>\r\n                    <Form.Control onChange={onParamChange} value={params.description} name=\"description\" type=\"text\"/>\r\n                </Form.Group>\r\n                <Form.Group as={Col}>\r\n                    <Form.Label>Location</Form.Label>\r\n                    <Form.Control onChange={onParamChange} value={params.location} name=\"location\" type=\"text\"/>\r\n                </Form.Group>\r\n                <Form.Group as={Col} xs=\"auto\" className=\"ml-2\">\r\n                    <Form.Check className=\"mb-2\" onChange={onParamChange} value={params.full_time} name=\"full_time\" id=\"full-time\" label=\"Only Full Time\" type=\"checkbox\"/>\r\n                </Form.Group> \r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import axios from \"axios\"\r\nimport { useEffect, useReducer } from \"react\"\r\n\r\nconst BASE_URL = 'https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json'\r\n\r\nconst ACTIONS = {\r\n    MAKE_REQUEST: 'MAKE_REQUEST',\r\n    GET_DATA: 'GET_DATA',\r\n    ERROR: 'ERROR',\r\n    UPDATE_HAS_NEXT_PAGE: 'UPDATE_HAS_NEXT_PAGE'\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.MAKE_REQUEST:\r\n            return {\r\n                loading:true, jobs:[]\r\n            }\r\n        case ACTIONS.GET_DATA:\r\n            return{\r\n                ...state,\r\n                loading:false,\r\n                jobs: action.payload.jobs\r\n            }\r\n        case ACTIONS.ERROR:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error: action.payload.error,\r\n                jobs:[]\r\n            }\r\n        case ACTIONS.UPDATE_HAS_NEXT_PAGE:\r\n            return {\r\n                ...state,\r\n                hasNextPage: action.payload.hasNextPage\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst useFetchJobs = (params, page) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, {jobs: [], loading:true})\r\n\r\n    useEffect(() => {\r\n        const cancelToken1 = axios.CancelToken.source()\r\n        \r\n        dispatch({type: ACTIONS.MAKE_REQUEST})\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelToken1.token,\r\n            params: {markdown: true, page: page, ...params}\r\n        })\r\n        .then(res => dispatch({type:ACTIONS.GET_DATA, payload: {jobs: res.data}}))\r\n        .catch(err =>{\r\n            if(axios.isCancel(err)) return\r\n            dispatch({type:ACTIONS.ERROR, payload: {error: err}})\r\n        })\r\n        \r\n        const cancelToken2 = axios.CancelToken.source()\r\n        axios.get(BASE_URL, {\r\n            cancelToken: cancelToken2.token,\r\n            params: {markdown: true, page: page + 1, ...params}\r\n        })\r\n        .then(res => dispatch({type:ACTIONS.UPDATE_HAS_NEXT_PAGE, payload: {hasNextPage: res.data.length !== 0}}))\r\n        .catch(err =>{\r\n            if(axios.isCancel(err)) return\r\n            dispatch({type:ACTIONS.ERROR, payload: {error: err}})\r\n        })\r\n\r\n        return () => {\r\n            cancelToken1.cancel()\r\n            cancelToken2.cancel()\r\n        }\r\n        \r\n    }, [params, page])\r\n\r\n    return state\r\n}\r\n\r\nexport default useFetchJobs","import React, { useState } from 'react'\nimport { Container } from 'react-bootstrap';\nimport './App.css';\nimport Job from './Job';\nimport JobPagination from './JobPagination';\nimport SearchForm from './SearchForm';\nimport useFetchJobs from './useFetchJobs'\nimport {GoMarkGithub} from 'react-icons/go'\n\n\nfunction App() {\n  const [params, setParams] = useState({})\n  const [page, setPage] = useState(1)\n  const {jobs, loading, error, hasNextPage} = useFetchJobs(params, page)\n\n  const handleParamChange = e => {\n    const param = e.target.name\n    const value = e.target.value\n    setPage(1)\n    setParams(prev => {\n      return {\n        ...prev,\n        [param]: value\n      }\n    })\n  }\n\n  return (\n    <Container className=\"my-4\">\n    <h1 className=\"mb-4 text-center\"><GoMarkGithub /> Github Jobs</h1> \n    <SearchForm params={params} onParamChange={handleParamChange}/>\n    <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    {loading && <h1>Loading...</h1>}\n    {error && <h1>Error. Try Refreshing.</h1>}\n    {jobs.map(job => {\n      return <Job key={job.id} job={job}/>\n    })}\n    <JobPagination page={page} setPage={setPage} hasNextPage={hasNextPage}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}